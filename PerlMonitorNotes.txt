Notes on structure of perl sensor-reading program
Line numbers based on 485poll22.plx

uses some external packages:
	Term::ReadKey for live keypress detection
	POSIX "sus_wait_h" probably for threads
	threads("yield")
	threads::shared to share vars with threads
	Schedule::Cron for crontab-based sprinkler control
	Win32::SerialPort to talk to serial port

(25) Saves PID in a file for a watchdog

(48) Does inits for serial port

(90) Prints some initial messages

(123) Set RTS active for serial port direction control

(128) Main variable inits

(157) Start cron threads for sprinkler scheduler

(187) sub to check length, opcode of new message

(208) sub logit logging function - main output to data file.  Is this still used?

(228) sub logit2  - used?

(243) main block of references to per-sensor processing routines.  Names are like $rainref for rain sensor.  Currently 10 are defined - not all used in production.

(565) open main data log file - some kind of option to open a test log file?

(596) Set up a hash of metadata for each sensor:
	name
	addr
	poll rate
	kind of data returned (?)
	also hash of err counts

(707) Seems to be reverse lookup addr->name?

(716)  MAIN POLL ONE SENSOR ROUTINE pollit()

(766)  sub checkit - validate received message

(842) sub logRestart - log that a sensor restarted

(852) sub logMsg - main data logger??

(867) sub readit - main read loop - lots of logic here

(962) MAIN LOOP
	- handle sprinkler cron job
	- loop thru all configured sensors using pollit, readit
	- check transit process, restart if needed (starts it initially?)
	- if time to update web site, send data
	- sleep with keyboard hot key checks - lots of code

(1347) sub cronDispatch - dsipatcher for cron process

(1359) main cron thread code

(1377) sub shortTS - timestamp utility

(1390) SMS alert stuff

(1443) Transport child process code
	- (1447) transport main loop


================= end =============